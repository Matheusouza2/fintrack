generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           Int    @id @default(autoincrement())
  nomeCompleto String
  email        String @unique
  cpf          String @unique
  senha        String
}

model Transacao {
  id        Int           @id @default(autoincrement())
  valor     Float
  tipo      TipoTransacao
  descricao String?
  createdAt DateTime      @default(now())
}

model Bancos {
  id              Int      @id @default(autoincrement())
  codigo          String   @unique
  cnpj            String   @unique
  nome            String   @unique
  nome_curto      String   @unique
  icone           String   @unique
  primary_color   String   @unique
  secondary_color String   @unique
  created_at      DateTime @default(now()) @db.Timestamp(0)
  Contas          Contas[]
}

model Contas {
  id                         Int              @id @default(autoincrement())
  agencia                    String
  conta                      String
  saldoInicial               Float
  valorChequeEspecial        Float
  banco                      Int
  categoria                  String
  conta_banco                Bancos           @relation(fields: [banco], references: [id], map: "Contas_banco_fkey")
  transferenciasDestinatario Transferencias[] @relation("ContaDestinatario")
  transferenciasRemetente    Transferencias[] @relation("ContaRemetente")

  @@index([banco], map: "Contas_banco_index")
}

model CartaoDeCredito {
  id              Int      @id @default(autoincrement())
  numero          String   @unique
  nomeTitular     String
  dataValidade    DateTime
  codigoSeguranca String
  limiteCredito   Float
  saldoDisponivel Float
}

model Transferencias {
  id                    Int    @id @default(autoincrement())
  id_conta_remetente    Int
  id_conta_destinatario Int
  valor                 Float
  conta_2               Contas @relation("ContaDestinatario", fields: [id_conta_destinatario], references: [id], map: "Transferencias_destinatario_fkey")
  conta                 Contas @relation("ContaRemetente", fields: [id_conta_remetente], references: [id], map: "Transferencias_remetente_fkey")

  @@index([id_conta_destinatario], map: "Transferencias_destinatario_idx")
  @@index([id_conta_remetente], map: "Transferencias_remetente_idx")
}

model Categoria {
  id            Int            @id @default(autoincrement())
  descricao     String?
  icone         String
  subcategorias Subcategoria[]
}

model Subcategoria {
  id          Int       @id @default(autoincrement())
  descricao   String
  icone       String
  categoriaId Int
  categoria   Categoria @relation(fields: [categoriaId], references: [id], map: "Subcategoria_categoria_fkey")

  @@index([categoriaId], map: "Subcategoria_categoria_idx")
}

model ObjetivoFinanceiro {
  id            Int      @id @default(autoincrement())
  nome          String
  valorObjetivo Float
  valorAtual    Float    @default(0)
  dataAlvo      DateTime
  status        Status   @default(PENDENTE)
}

enum TipoTransacao {
  CREDITO
  DEBITO
}

enum Status {
  PENDENTE
  ALCANCADO
  FALHOU
}
