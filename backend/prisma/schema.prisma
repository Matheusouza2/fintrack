// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ----------------------------------

model Usuario {
  id           Int    @id @default(autoincrement())
  nomeCompleto String
  email        String @unique
  cpf          String @unique
  senha        String
}

model Transacao {
  id        Int           @id @default(autoincrement())
  valor     Float
  tipo      TipoTransacao
  descricao String?
  createdAt DateTime      @default(now())
}

// Enum para tipo de transação
enum TipoTransacao {
  CREDITO
  DEBITO
}

model Bancos {
  id              Int      @id @default(autoincrement())
  codigo          String   @unique
  cnpj            String   @unique
  nome            String   @unique
  nome_curto      String   @unique
  icone           String   @unique
  primary_color   String   @unique
  secondary_color String   @unique
  created_at      DateTime @default(now()) @db.Timestamp(0)
  Contas          Contas[]
}

model Contas {
  id                   Int       @id @default(autoincrement())
  agencia              String
  conta                String
  banco                Int
  saldoInicial         Float   
  valorChequeEspecial  Float 
  conta_banco          Bancos  @relation(fields: [banco], references: [id])  
  transferenciasRemetente     Transferencias[] @relation("ContaRemetente")
  transferenciasDestinatario  Transferencias[] @relation("ContaDestinatario")
}

model CartaoDeCredito {
  id              Int     @id @default(autoincrement())
  numero          String  @unique
  nomeTitular     String
  dataValidade    DateTime
  codigoSeguranca String
  limiteCredito   Float
  saldoDisponivel Float
}

  model Transferencias {
    id                     Int     @id @default(autoincrement())
    id_conta_remetente     Int
    id_conta_destinatario  Int
    conta                  Contas  @relation("ContaRemetente",fields: [id_conta_remetente], references: [id])
    conta_2                Contas  @relation("ContaDestinatario",fields: [id_conta_destinatario], references: [id])

    valor                  Float
  }

model Categoria {
  id                  Int            @id @default(autoincrement())
  nome                String
  descricao           String?
  tipo                String
  cor                 String
  icone               String
  subcategorias       Subcategoria[] 
}

model Subcategoria {
  id                  Int            @id @default(autoincrement())
  descricao           String
  icone               String
  categoriaId         Int
  categoria           Categoria      @relation(fields: [categoriaId], references: [id])
}
